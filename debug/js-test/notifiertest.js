var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var NotifierTest = (function (_super) {
    __extends(NotifierTest, _super);
    function NotifierTest() {
        _super.call(this);
        this._listener1 = function () {
            console.log(">> listener1 is called.");
        };
        this._listener2 = function () {
            console.log(">> listener2 is called.");
        };
    }
    NotifierTest.prototype.onListener1ForType1 = function () {
        this.on("type1", this._listener1);
        console.log("listener1 is added for type1.");
    };
    NotifierTest.prototype.onListener1ForType2 = function () {
        this.on("type2", this._listener1);
        console.log("listener1 is added for type2.");
    };
    NotifierTest.prototype.onListener2ForType1 = function () {
        this.on("type1", this._listener2);
        console.log("listener2 is added for type1.");
    };
    NotifierTest.prototype.onListener2ForType2 = function () {
        this.on("type2", this._listener2);
        console.log("listener2 is added for type2.");
    };
    NotifierTest.prototype.offListener1ForType1 = function () {
        this.off("type1", this._listener1);
        console.log("listener1 is removed for type1.");
    };
    NotifierTest.prototype.offListener1ForType2 = function () {
        this.off("type2", this._listener1);
        console.log("listener1 is removed for type2.");
    };
    NotifierTest.prototype.offListener2ForType1 = function () {
        this.off("type1", this._listener2);
        console.log("listener2 is removed for type1.");
    };
    NotifierTest.prototype.offListener2ForType2 = function () {
        this.off("type2", this._listener2);
        console.log("listener2 is removed for type2.");
    };
    NotifierTest.prototype.offAllListenersForType1 = function () {
        this.off("type1");
        console.log("all listeners are removed for type1.");
    };
    NotifierTest.prototype.offAllListenersForType2 = function () {
        this.off("type2");
        console.log("all listeners are removed for type2.");
    };
    NotifierTest.prototype.offAllListenersForAllTypes = function () {
        this.off();
        console.log("all listeners are removed for all types.");
    };
    NotifierTest.prototype.checkListener1ForType1 = function () {
        var b = this.check("type1", this._listener1);
        console.log("has listener1 for type1: " + b);
    };
    NotifierTest.prototype.checkListener1ForType2 = function () {
        var b = this.check("type2", this._listener1);
        console.log("has listener1 for type2: " + b);
    };
    NotifierTest.prototype.checkListener2ForType1 = function () {
        var b = this.check("type1", this._listener2);
        console.log("has listener2 for type1: " + b);
    };
    NotifierTest.prototype.checkListener2ForType2 = function () {
        var b = this.check("type2", this._listener2);
        console.log("has listener2 for type2: " + b);
    };
    NotifierTest.prototype.checkAnyListenersForType1 = function () {
        var b = this.check("type1");
        console.log("has any listeners for type1: " + b);
    };
    NotifierTest.prototype.checkAnyListenersForType2 = function () {
        var b = this.check("type2");
        console.log("has any listeners for type2: " + b);
    };
    NotifierTest.prototype.checkAnyListenersForAnyTypes = function () {
        var b = this.check();
        console.log("has any listeners for any types: " + b);
    };
    NotifierTest.prototype.notifyType1 = function () {
        console.log("\ntype1 is notified.");
        this.notify("type1");
    };
    NotifierTest.prototype.notifyType2 = function () {
        console.log("\ntype2 is notified.");
        this.notify("type2");
    };
    NotifierTest.prototype.init = function () {
        var _this = this;
        document.getElementById("onListener1ForType1").addEventListener("click", function () {
            _this.onListener1ForType1();
        });
        document.getElementById("onListener1ForType2").addEventListener("click", function () {
            _this.onListener1ForType2();
        });
        document.getElementById("onListener2ForType1").addEventListener("click", function () {
            _this.onListener2ForType1();
        });
        document.getElementById("onListener2ForType2").addEventListener("click", function () {
            _this.onListener2ForType2();
        });
        document.getElementById("offListener1ForType1").addEventListener("click", function () {
            _this.offListener1ForType1();
        });
        document.getElementById("offListener1ForType2").addEventListener("click", function () {
            _this.offListener1ForType2();
        });
        document.getElementById("offListener2ForType1").addEventListener("click", function () {
            _this.offListener2ForType1();
        });
        document.getElementById("offListener2ForType2").addEventListener("click", function () {
            _this.offListener2ForType2();
        });
        document.getElementById("offAllListenersForType1").addEventListener("click", function () {
            _this.offAllListenersForType1();
        });
        document.getElementById("offAllListenersForType2").addEventListener("click", function () {
            _this.offAllListenersForType2();
        });
        document.getElementById("offAllListenersForAllTypes").addEventListener("click", function () {
            _this.offAllListenersForAllTypes();
        });
        document.getElementById("checkListener1ForType1").addEventListener("click", function () {
            _this.checkListener1ForType1();
        });
        document.getElementById("checkListener1ForType2").addEventListener("click", function () {
            _this.checkListener1ForType2();
        });
        document.getElementById("checkListener2ForType1").addEventListener("click", function () {
            _this.checkListener2ForType1();
        });
        document.getElementById("checkListener2ForType2").addEventListener("click", function () {
            _this.checkListener2ForType2();
        });
        document.getElementById("checkAnyListenersForType1").addEventListener("click", function () {
            _this.checkAnyListenersForType1();
        });
        document.getElementById("checkAnyListenersForType2").addEventListener("click", function () {
            _this.checkAnyListenersForType2();
        });
        document.getElementById("checkAnyListenersForAnyTypes").addEventListener("click", function () {
            _this.checkAnyListenersForAnyTypes();
        });
        document.getElementById("notifyType1").addEventListener("click", function () {
            _this.notifyType1();
        });
        document.getElementById("notifyType2").addEventListener("click", function () {
            _this.notifyType2();
        });
        document.getElementById("NotifierTest").addEventListener("click", function () {
            console.log(JSON.stringify(_this));
        });
    };
    return NotifierTest;
})(Notifier);
var notifyTest;
notifyTest = new NotifierTest();
notifyTest.init();



//# sourceMappingURL=data:application/json;base64,